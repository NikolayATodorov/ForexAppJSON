package com.forex.test.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExtServiceRequestAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtServiceRequestAllPropertiesEquals(ExtServiceRequest expected, ExtServiceRequest actual) {
        assertExtServiceRequestAutoGeneratedPropertiesEquals(expected, actual);
        assertExtServiceRequestAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtServiceRequestAllUpdatablePropertiesEquals(ExtServiceRequest expected, ExtServiceRequest actual) {
        assertExtServiceRequestUpdatableFieldsEquals(expected, actual);
        assertExtServiceRequestUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtServiceRequestAutoGeneratedPropertiesEquals(ExtServiceRequest expected, ExtServiceRequest actual) {
        assertThat(expected)
            .as("Verify ExtServiceRequest auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtServiceRequestUpdatableFieldsEquals(ExtServiceRequest expected, ExtServiceRequest actual) {
        assertThat(expected)
            .as("Verify ExtServiceRequest relevant properties")
            .satisfies(e -> assertThat(e.getServiceName()).as("check serviceName").isEqualTo(actual.getServiceName()))
            .satisfies(e -> assertThat(e.getRequestId()).as("check requestId").isEqualTo(actual.getRequestId()))
            .satisfies(e -> assertThat(e.getTimeStamp()).as("check timeStamp").isEqualTo(actual.getTimeStamp()))
            .satisfies(e -> assertThat(e.getClientId()).as("check clientId").isEqualTo(actual.getClientId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtServiceRequestUpdatableRelationshipsEquals(ExtServiceRequest expected, ExtServiceRequest actual) {}
}
